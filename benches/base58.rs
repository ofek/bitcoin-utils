#![feature(test)]

extern crate test;
extern crate bitcoin_utils;

use bitcoin_utils::base58::{
    b58decode, b58decode_check, b58encode, b58encode_check
};

const RANDOM_BYTES: &'static [u8; 500] =
    b"-{\xf5\xd3\x17|\x8d\x14\xb9\xe7\xc7\xccIf\xf0\x8b\xf49.\xb3\xf4+a\xc50h\
    \x96\xe6\xfb8\x10\xa7\xb9C^\xb1\xf6\xf0\xcb\x99\xa0\xeeR\x8e\x10\x13R\xab\
    OK\xed\xd9\xf03\xc4\rY\xc4\xf6a-e\xb3\xc5 )\xfeJ{(!\xd1\xc0\x9f\x9b\xc35\
    \xd9\x99)T/D\xb2 \x953\xe0S\xa0t\xbf\xcd\x19\x18\xc4\xdf\x8d\xeesRetX\xaa\
    \x81\x17\x89\xf5I\xe9\xc7\xd0e1\xa3\xf5\x9e\xf7gq\x91\xa5\xe4G\x14\xf6|H\
    \x1d6\x9d*I\x85\xe6\xbd\xb0\x0f_\xd4\xb5;l{\xec\t\x0f!\xaa*\x83y\xa8\xcc\
    \x81\xd6m*\xa51C\x9b\xc7R\xb8||\xda\xb9\xe7o\x80\xb5j#\xa4\x9alu\xb3\xe2D\
    \xc9O\x85\xcd\xd5^B\x1b\x92T\xeb\x0b\x86E5Iu8Z\x0bR\x12\xa9\xafQQ\x9b\xa99\
    \xbcM\xb1M.p\xb9\xde\xbc\xce\x0b\x17\x1e\x17\xeaY\xb3\x01\xe5p\xd3{u\xb1\
    \xdd\xec\xdd?\xa7BP\x15\xe3\xa0\xb6\x88\xdaw\xa6\xc6\xf1\x12\xac\x13\x83\
    \xba\x11\x85\xa5D\x98,'\\\xf0\x0e?\xfa\xaf\x96\xf5\x8b`\\\x05$j$\xeb\xceJ\
    \x9bn\x0e\xe7)\xa4a\xd3\xfff\xc4\x9bo\x9d\xe9a\xec\x86v\x84\xd2\xe1\xe4\xbc\
    m\xb1\x9c5[\xbb\x8e*<\x1b\x08.\xae\xfd\xe2\xd0\xc2\xb4&@\xa9PQ\x0c]\x00\xe6\
    \x15\x12(o\xe5\xb12c\x85\xe3>8\xe4\x9f0\xee\xdc\x17\xe3\xf9\xee7\xbf\x86\n\
    \x89\xcf,\x99\x08\xc3\xfd\x97\x1b6\xac\xa7\x15?ET5\xdc\xf9\xfb\xb4\r\xf8\
    \x05D\x1c6\xac.\xfa+\\+\xd2\xbf\x02\xd14,\x9f\xf7\x8a\xb9\xacBh^Z\xab\x00)\
    \xea%\xc1\xad\xb8\x9d\xb6\r\xc3\xb2\xa7Cf\xe8\xaa2\xfc\xad@\xdeznf\x88l\x04\
    \xe6\xca\xb2\x8f\xda\x1b[9^y\x0b\x07\x1f\xc6g\xabU\x8c\xcb\xb2\xd7\xbfOe\xb5\
    \xa3\xa5bO\xcb\xa4\x7f\x94\x01\x03\xb7\xaa4\xf3\xbd\x05\xcf\x07a\xe7q3p\xfb\
    \xf1\xb2x9\xac\xca_Y\x93\x15a\xa3\x14\x12\xbb";

#[cfg(test)]
mod tests {
    use super::*;
    use test::Bencher;

    #[bench]
    fn bench_b58encode(b: &mut Bencher) {
        b.iter(|| b58encode(RANDOM_BYTES));
    }
}
